import { TestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';
import { <%= serviceClassName %> } from './<%= fileName %>.service';
import { <%= modelClassName %> } from './<%= fileName %>.model';
import { ApiService } from '<%= apiServicePath %>';

describe('<%= serviceClassName %>', () => {
  beforeEach(function() {
    TestBed.resetTestEnvironment();
    TestBed.initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting());
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [<%= serviceClassName %>]
    });

    this.<%= camelize(serviceClassName) %> = TestBed.get(<%= serviceClassName %>);
    this.httpClient = TestBed.get(HttpClient);
  });

  it('inherits ApiService', function() {
    expect(this.<%= camelize(serviceClassName) %> instanceof ApiService).toBeTrue();
  });

  describe('config', () => {
    it('configures a service for <%= modelClassName %>', function() {
      expect(this.<%= camelize(serviceClassName) %>.config).toEqual({
        Model: <%= modelClassName %>,
        memberPath: BB3Routes.<%= camelize(modelClassName) %>,
        memberWrapper: '<%= camelize(modelClassName) %>',
        Collection: undefined,
        collectionPath: undefined
      });
    });
  });
});
